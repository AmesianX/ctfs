from ctypes import *

libc = CDLL('libc.so.6')

s = [22, 197, 104, 22, 111, 198, 22, 111, 106, 22, 215, 115, 22, 103, 82, 255, 22, 123, 75, 22, 111, 236, 22, 242, 42, 205, 186, 172, 242, 252, 22, 123, 227, 71, 124, 195, 85, 22, 242, 248, 28, 22, 111, 232, 232, 141, 118, 91, 46, 100, 51, 160, 202, 154, 22, 111, 103, 50, 22, 107, 14, 22, 123, 183, 50, 88, 164, 90, 37, 22, 123, 94, 5, 24, 88, 233, 22, 123, 95, 22, 1, 212, 172, 178, 206, 199, 22, 103, 155, 181, 22, 242, 84, 18, 15, 130, 116, 22, 107, 66, 22, 240, 33, 62, 22, 111, 220, 136, 113, 233, 63, 161, 66, 22, 242, 225, 22, 242, 253, 22, 123, 103, 22, 118, 63, 22, 242, 1, 22, 171, 127, 151, 22, 125, 235, 220, 107, 151, 143, 56, 93, 42, 22, 107, 237, 22, 123, 176, 60, 251, 22, 123, 51, 175, 60, 85, 237, 24, 219, 93, 2, 27, 255, 67, 22, 242, 252, 250, 171, 58, 22, 123, 252, 41, 22, 197, 210, 230, 5, 61, 124, 148, 22, 130, 118, 22, 254, 216, 191, 97, 137, 250, 22, 130, 92, 22, 123, 188, 168, 154, 16, 149, 22, 242, 178, 235, 241, 180, 6, 239, 248, 0, 22, 123, 234, 161, 58, 230, 202, 22, 123, 12, 203, 208, 73, 71, 100, 22, 123, 190, 31, 36, 30, 169, 28, 22, 107, 124, 100, 198, 22, 103, 20, 116, 22, 107, 90, 198, 22, 123, 94, 76, 122, 22, 123, 99, 60, 113, 22, 123, 100, 37, 18, 158, 22, 123, 10, 220, 22, 242, 171, 22, 197, 212]
sbox = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]
sbox = {y: x for x, y in enumerate(sbox)}
i = 0
result = ''
while i < len(s):
	if s[i] == 22:
		cnt = sbox[s[i+1]]
		print cnt,
		r = s[i+2]-libc.rand()+ord('0')&0xff
		print r
		x = chr(r) * cnt
		i += 3
	else:
		r = s[i]-libc.rand()+ord('0')&0xff
		print r
		x = chr(r)
		i += 1
	result += x

print result
print len(result)
print len(result) % 8
# calculates BW(T)
def bw(t):
    m = sorted(t[-i:] + t[:-i] for i in range(len(t)))
    return "".join(m[i][len(t)-1] for i in range(len(t)))

# for a given string return index with nth occurence of char
def n_occurence_index(string, char, n):
    vector = [string[:index+1].count(char) for index in range(0, len(string))]
    return vector.index(n)

# tells us how many times a char at given index has occured prior to that char
def occurences(string, index):
    return string[:index+1].count(string[index])
  
bwt = result

# reconstruct the t backwards
t = ''
index = 0
first_column = sorted(bwt)

for i in range(len(bwt)-1):
    char = bwt[index]
    t = char + t
    occurence_count = occurences(bwt, index)
    index = n_occurence_index(first_column, char, occurence_count)

print "Original string:", t
# I don't know why, but the string itself doesn't show flag.
# I just did some manual bit-rotation
t = t[43:] + '0' + t[:43]

result = t

result = [int(result[i:i+8], 2) for i in range(0, len(result), 8)]
result = bytearray(result)
print `result`