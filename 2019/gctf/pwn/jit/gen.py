# from z3 import *
data="""0
48
1
49
2
50
3
51
4
52
5
53
6
54
7
55
8
56
9
57
0
1632
1
1633
2
1634
3
1635
4
1636
5
1637
6
1638
7
1639
8
1640
9
1641
0
1776
1
1777
2
1778
3
1779
4
1780
5
1781
6
1782
7
1783
8
1784
9
1785
0
1984
1
1985
2
1986
3
1987
4
1988
5
1989
6
1990
7
1991
8
1992
9
1993
0
2406
1
2407
2
2408
3
2409
4
2410
5
2411
6
2412
7
2413
8
2414
9
2415
0
2534
1
2535
2
2536
3
2537
4
2538
5
2539
6
2540
7
2541
8
2542
9
2543
0
2662
1
2663
2
2664
3
2665
4
2666
5
2667
6
2668
7
2669
8
2670
9
2671
0
2790
1
2791
2
2792
3
2793
4
2794
5
2795
6
2796
7
2797
8
2798
9
2799
0
2918
1
2919
2
2920
3
2921
4
2922
5
2923
6
2924
7
2925
8
2926
9
2927
0
3046
1
3047
2
3048
3
3049
4
3050
5
3051
6
3052
7
3053
8
3054
9
3055
0
3174
1
3175
2
3176
3
3177
4
3178
5
3179
6
3180
7
3181
8
3182
9
3183
0
3302
1
3303
2
3304
3
3305
4
3306
5
3307
6
3308
7
3309
8
3310
9
3311
0
3430
1
3431
2
3432
3
3433
4
3434
5
3435
6
3436
7
3437
8
3438
9
3439
0
3664
1
3665
2
3666
3
3667
4
3668
5
3669
6
3670
7
3671
8
3672
9
3673
0
3792
1
3793
2
3794
3
3795
4
3796
5
3797
6
3798
7
3799
8
3800
9
3801
0
3872
1
3873
2
3874
3
3875
4
3876
5
3877
6
3878
7
3879
8
3880
9
3881
0
4160
1
4161
2
4162
3
4163
4
4164
5
4165
6
4166
7
4167
8
4168
9
4169
0
4240
1
4241
2
4242
3
4243
4
4244
5
4245
6
4246
7
4247
8
4248
9
4249
0
6112
1
6113
2
6114
3
6115
4
6116
5
6117
6
6118
7
6119
8
6120
9
6121
0
6160
1
6161
2
6162
3
6163
4
6164
5
6165
6
6166
7
6167
8
6168
9
6169
0
6470
1
6471
2
6472
3
6473
4
6474
5
6475
6
6476
7
6477
8
6478
9
6479
0
6608
1
6609
2
6610
3
6611
4
6612
5
6613
6
6614
7
6615
8
6616
9
6617
0
6784
1
6785
2
6786
3
6787
4
6788
5
6789
6
6790
7
6791
8
6792
9
6793
0
6800
1
6801
2
6802
3
6803
4
6804
5
6805
6
6806
7
6807
8
6808
9
6809
0
6992
1
6993
2
6994
3
6995
4
6996
5
6997
6
6998
7
6999
8
7000
9
7001
0
7088
1
7089
2
7090
3
7091
4
7092
5
7093
6
7094
7
7095
8
7096
9
7097
0
7232
1
7233
2
7234
3
7235
4
7236
5
7237
6
7238
7
7239
8
7240
9
7241
0
7248
1
7249
2
7250
3
7251
4
7252
5
7253
6
7254
7
7255
8
7256
9
7257
0
42528
1
42529
2
42530
3
42531
4
42532
5
42533
6
42534
7
42535
8
42536
9
42537
0
43216
1
43217
2
43218
3
43219
4
43220
5
43221
6
43222
7
43223
8
43224
9
43225
0
43264
1
43265
2
43266
3
43267
4
43268
5
43269
6
43270
7
43271
8
43272
9
43273
0
43472
1
43473
2
43474
3
43475
4
43476
5
43477
6
43478
7
43479
8
43480
9
43481
0
43600
1
43601
2
43602
3
43603
4
43604
5
43605
6
43606
7
43607
8
43608
9
43609
0
44016
1
44017
2
44018
3
44019
4
44020
5
44021
6
44022
7
44023
8
44024
9
44025
0
65296
1
65297
2
65298
3
65299
4
65300
5
65301
6
65302
7
65303
8
65304
9
65305"""
data=data.split('\n')
data=map(int,data)
data=[data[i:i+2] for i in range(0, len(data), 2)]
maps=[[] for i in range(10)]
for x, y in data:
	maps[x].append(y)

def _(x):
	if ord(x) & 0x80:
		return ord(x) - 0x100
	else:
		return ord(x)

rev={}
def parse(text):
  res = 0
  for c in text:
    res = res * 10 + _(c) - 48;
  rev[res] = text
  return [res, 10**len(text)]


maps=[map(lambda x: parse(unichr(x).encode('utf8')),x) for x in maps]
# print repr(maps).replace('[', '{').replace(']', '}').replace("'", '"')
# exit()
from gmpy2 import invert

datas={
0: (0, ),
1: (1, ),
2: (2, ),
3: (3, ),
4: (4, ),
5: (5, ),
6: (6, ),
7: (7, ),
8: (8, ),
9: (9, ),
10: (-1014, ),
11: (-1013, ),
12: (-1012, ),
13: (-1011, ),
14: (-1010, ),
15: (-1009, ),
16: (-1008, ),
17: (-1007, ),
18: (-1006, ),
19: (-1005, ),
20: (-9452, ),
21: (-9451, ),
22: (1, -1012, ),
23: (1, -1011, ),
24: (-9448, ),
25: (-9447, ),
26: (-9446, ),
27: (-9445, ),
28: (-9444, ),
29: (-9443, ),
30: (-9442, ),
31: (-9441, ),
32: (-9440, ),
33: (-9439, ),
34: (-8414, ),
35: (-8413, ),
36: (-8412, ),
37: (-8411, ),
38: (-986, ),
39: (-985, ),
40: (-984, ),
41: (-983, ),
42: (-982, ),
43: (-981, ),
44: (-980, ),
45: (-979, ),
46: (-978, ),
47: (-977, ),
48: (-976, ),
49: (-975, ),
50: (-974, ),
51: (-973, ),
52: (-972, ),
53: (-971, ),
54: (-970, ),
55: (-969, ),
56: (-9416, ),
57: (-9415, ),
58: (-9414, ),
59: (-9413, ),
60: (-9412, ),
61: (-9411, ),
62: (-9410, ),
63: (-9409, ),
64: (-9408, ),
65: (-9407, ),
66: (-9406, ),
67: (-9405, ),
68: (-9404, ),
69: (-9403, ),
70: (-9402, ),
71: (-9401, ),
72: (-9400, ),
73: (-9399, ),
74: (-9398, ),
75: (-9397, ),
76: (-9396, ),
77: (-9395, ),
78: (-9394, ),
79: (-9393, ),
80: (-9392, ),
81: (-9391, ),
82: (1, -9400, ),
83: (1, -9399, ),
84: (-9388, ),
85: (-9387, ),
86: (-9386, ),
87: (-9385, ),
88: (-9384, ),
89: (-9383, ),
90: (-9382, ),
91: (-9381, ),
92: (-9380, ),
93: (-9379, ),
94: (1, -9388, ),
95: (1, -9387, ),
96: (1, -9386, ),
97: (1, -9385, ),
98: (1, -9384, ),
99: (1, -9383, ),
100: (1, -9382, ),
101: (1, -9381, ),
102: (-9370, ),
103: (-9369, ),
104: (-9368, ),
105: (-9367, ),
106: (-9366, ),
107: (-9365, ),
108: (-9364, ),
109: (-9363, ),
110: (-9362, ),
111: (-9361, ),
112: (-9360, ),
113: (-9359, ),
114: (1, -9368, ),
115: (1, -9367, ),
116: (-7820, ),
117: (-7819, ),
118: (-7818, ),
119: (-7817, ),
120: (-7816, ),
121: (-7815, ),
122: (-9350, ),
123: (-9349, ),
124: (-9348, ),
125: (-9347, ),
126: (-9346, ),
127: (-9345, ),
128: (-9344, ),
129: (-9343, ),
130: (-9342, ),
131: (-9341, ),
132: (-9340, ),
133: (-9339, ),
134: (-9338, ),
135: (-9337, ),
136: (-8568, ),
137: (-8567, ),
138: (-8566, ),
139: (-8565, ),
140: (-8564, ),
141: (-8563, ),
142: (-9330, ),
143: (-9329, ),
144: (-9328, ),
145: (-9327, ),
146: (-9326, ),
147: (-9325, ),
148: (-9324, ),
149: (-9323, ),
150: (-9322, ),
151: (-9321, ),
152: (-9320, ),
153: (-9319, ),
154: (1, -9328, ),
155: (1, -9327, ),
156: (1, -9326, ),
157: (1, -9325, ),
158: (-9826, ),
159: (-9825, ),
160: (-9824, ),
161: (-9823, ),
162: (-9822, ),
163: (-9821, ),
164: (-9820, ),
165: (-9819, ),
166: (-9818, ),
167: (-9817, ),
168: (-9304, ),
169: (-9303, ),
170: (-9302, ),
171: (-9301, ),
172: (-9300, ),
173: (-9299, ),
174: (-9298, ),
175: (-9297, ),
176: (-9296, ),
177: (-9295, ),
178: (-8526, ),
179: (-8525, ),
180: (-8524, ),
181: (-8523, ),
182: (-8522, ),
183: (-8521, ),
184: (-9800, ),
185: (-9799, ),
186: (-9798, ),
187: (-9797, ),
188: (-9796, ),
189: (-9795, ),
190: (-9794, ),
191: (-9793, ),
192: (-9792, ),
193: (-9791, ),
194: (-8510, ),
195: (-8509, ),
196: (-8508, ),
197: (-8507, ),
198: (-8506, ),
199: (-8505, ),
200: (-9528, ),
201: (-9527, ),
202: (-9526, ),
203: (-9525, ),
204: (-9524, ),
205: (-9523, ),
206: (-9522, ),
207: (-9521, ),
208: (-9520, ),
209: (-9519, ),
210: (1, -9528, ),
211: (1, -9527, ),
212: (1, -9526, ),
213: (1, -9525, ),
214: (1, -9524, ),
215: (1, -9523, ),
216: (1, -9522, ),
217: (1, -9521, ),
218: (1, -9520, ),
219: (1, -9519, ),
220: (-9508, ),
221: (-9507, ),
222: (-9506, ),
223: (-9505, ),
224: (-9504, ),
225: (-9503, ),
226: (-9502, ),
227: (-9501, ),
228: (-9500, ),
229: (-9499, ),
230: (-9498, ),
231: (-9497, ),
232: (-9496, ),
233: (-9495, ),
234: (-9494, ),
235: (-9493, ),
236: (-9492, ),
237: (-9491, ),
238: (-9490, ),
239: (-9489, ),
240: (-9488, ),
241: (-9487, ),
242: (-9486, ),
243: (-9485, ),
244: (-9484, ),
245: (-9483, ),
246: (-9482, ),
247: (-9481, ),
248: (-9480, ),
249: (-9479, ),
250: (1, -9488, ),
251: (1, -9487, ),
252: (1, -9486, ),
253: (1, -9485, ),
254: (1, -9484, ),
255: (1, -9483, ),
}